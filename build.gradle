buildscript {
    ext {               // ext : build.gradle에서 사용하는 전역변수 설정
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {      // repositories : 각종 의존성 라이브러리들을 어떤 원격 저장소에서 받을지 결정
        mavenCentral()  // mavenCentral() : 많이 사용하는 저장소지만, 본인이 만든 라이브러리를 업로드하기 위해서 많은 과정과 설정 필요
        //                  -> 개발자들이 직접 만든 라이브러리를 업로드하는 것이 힘들어 점점 공유가 안됨
        jcenter()       // jcenter() : mavenCentral 저장소의 문제점을 개선하여 라이브러리 업로드를 간단하게 함. 또 jcenter에 라이브러리를 업로드하면 mavenCentral에도 업로드 될 수 있도록 자동화
    }
    dependencies {      // dependencies : 프로젝트 개발에 필요한 의존성들을 선언하는 곳
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링 부트의 의존성들을 관리해주는 플러그인

group 'com.netty'
version '1.0-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {

    implementation('org.springframework.boot:spring-boot-starter-web')     // 특정버전을 명시하지 않으면 위에 작성한 ${springBootVersion} 버전을 따라감
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    annotationProcessor('org.projectlombok:lombok')
    implementation('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')

    implementation('org.springframework.boot:spring-boot-starter-mustache')

    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')    // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성

    implementation('org.springframework.session:spring-session-jdbc')

    testImplementation("org.springframework.security:spring-security-test")

    implementation 'org.jdom:jdom:2.0.2'
    implementation 'io.netty:netty-all:4.1.31.Final'

}
